# Generated by Django 5.2.5 on 2025-08-26 02:58

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('mix_brand', models.CharField(blank=True, max_length=100, null=True)),
                ('slug', models.SlugField(help_text='Used for URLs like /brand-vivo', unique=True)),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(help_text='Used for URLs like /category-battery', unique=True)),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255)),
                ('answer', models.TextField()),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Footer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_name', models.CharField(default='FolderFix', max_length=100)),
                ('brand_icon', models.CharField(default='ðŸ“±', max_length=10)),
                ('brand_highlight', models.CharField(default='Fix', max_length=50)),
                ('about_text', models.TextField(default='Your trusted platform for mobile combo and folder matching â€” helping shops and technicians work faster, smarter, and better.')),
                ('copyright_text', models.CharField(default='Â© 2025 FolderFix. All rights reserved.', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='HeroSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page', models.CharField(choices=[('home', 'Home'), ('about', 'About'), ('services', 'Services'), ('contact', 'Contact')], default='home', max_length=32)),
                ('is_enabled', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('title', models.CharField(default='Welcome to FolderFix', max_length=160)),
                ('subtitle', models.CharField(default='Universal mobile solutions for all your needs.', max_length=240)),
                ('cta_text', models.CharField(default='Explore Brands', max_length=60)),
                ('cta_url', models.CharField(default='#brands', max_length=255)),
                ('bg_image', models.ImageField(blank=True, help_text='Optional background image for hero section', null=True, upload_to='hero/')),
                ('bg_gradient_from', models.CharField(default='#0d6efd', max_length=20)),
                ('bg_gradient_to', models.CharField(default='#0dcaf0', max_length=20)),
                ('bg_overlay_opacity', models.FloatField(default=0.35)),
            ],
        ),
        migrations.CreateModel(
            name='NavLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('url', models.CharField(max_length=200)),
                ('order', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='FooterSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('order', models.PositiveIntegerField(default=0)),
                ('footer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='app.footer')),
            ],
        ),
        migrations.CreateModel(
            name='FooterLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('url', models.CharField(default='', max_length=255)),
                ('order', models.PositiveIntegerField(default=0)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='app.footersection')),
            ],
        ),
        migrations.CreateModel(
            name='Newsletter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.BooleanField(default=True)),
                ('button_text', models.CharField(default='Subscribe', max_length=50)),
                ('disclaimer', models.CharField(default='By subscribing, you agree to our Privacy Policy.', max_length=255)),
                ('footer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='newsletter', to='app.footer')),
            ],
        ),
        migrations.CreateModel(
            name='SocialLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(max_length=50)),
                ('icon_class', models.CharField(help_text='Bootstrap Icon class, e.g., bi bi-facebook', max_length=50)),
                ('url', models.CharField(default='', max_length=255)),
                ('order', models.PositiveIntegerField(default=0)),
                ('footer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_links', to='app.footer')),
            ],
        ),
        migrations.CreateModel(
            name='UniversalCombo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main_model', models.CharField(help_text='The main model name of the combo (e.g., Samsung Galaxy M12)', max_length=150)),
                ('compatible_models', models.TextField(help_text='List compatible models separated by commas or new lines')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField(blank=True, help_text='Optional short description or notes')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='universal_combos', to='app.brand')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='universal_combos', to='app.category')),
            ],
            options={
                'verbose_name': 'Universal Combo',
                'verbose_name_plural': 'Universal Combos',
                'ordering': ['brand', 'category', 'main_model'],
            },
        ),
    ]
