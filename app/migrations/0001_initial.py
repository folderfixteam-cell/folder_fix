# Generated by Django 5.2.5 on 2025-09-02 11:52

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ContactMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=120)),
                ("email", models.EmailField(max_length=254)),
                ("message", models.TextField()),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="FAQ",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question", models.CharField(max_length=255)),
                ("answer", models.TextField()),
                ("order", models.PositiveIntegerField(default=0)),
            ],
            options={
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="Feedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("email", models.EmailField(max_length=254)),
                ("message", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Footer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("brand_name", models.CharField(default="FolderFix", max_length=100)),
                ("brand_icon", models.CharField(default="ðŸ“±", max_length=10)),
                ("brand_highlight", models.CharField(default="Fix", max_length=50)),
                (
                    "about_text",
                    models.TextField(
                        default="Your trusted platform for mobile combo and folder matching â€” helping shops and technicians work faster, smarter, and better."
                    ),
                ),
                (
                    "copyright_text",
                    models.CharField(
                        default="Â© 2025 FolderFix. All rights reserved.", max_length=255
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HeroSection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "page",
                    models.CharField(
                        choices=[
                            ("home", "Home"),
                            ("about", "About"),
                            ("blog", "Blog"),
                            ("shop", "Shop"),
                            ("contact", "Contact"),
                            ("faq", "FAQ"),
                            ("privacy", "Privacy & Policy"),
                            ("terms", "Terms & Conditions"),
                            ("combo list", "Combo List"),
                            ("category list", "Category List"),
                        ],
                        default="home",
                        max_length=32,
                    ),
                ),
                ("is_enabled", models.BooleanField(default=True)),
                ("order", models.PositiveIntegerField(default=0)),
                (
                    "title",
                    models.CharField(default="Welcome to FolderFix", max_length=160),
                ),
                (
                    "subtitle",
                    models.CharField(
                        default="Universal mobile solutions for all your needs.",
                        max_length=240,
                    ),
                ),
                ("cta_text", models.CharField(default="Explore Brands", max_length=60)),
                ("cta_url", models.CharField(default="#brands", max_length=255)),
                (
                    "bg_image",
                    models.ImageField(
                        blank=True,
                        help_text="Optional background image for hero section",
                        null=True,
                        upload_to="hero/",
                    ),
                ),
                (
                    "bg_gradient_from",
                    models.CharField(default="#8e2de2", max_length=20),
                ),
                ("bg_gradient_to", models.CharField(default="#4a00e0", max_length=20)),
                ("bg_overlay_opacity", models.FloatField(default=0.35)),
            ],
        ),
        migrations.CreateModel(
            name="IconColor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="E.g. green, blue, pink", max_length=50, unique=True
                    ),
                ),
            ],
            options={
                "verbose_name": "Icon Color",
                "verbose_name_plural": "Icon Colors",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="NavLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("url", models.CharField(max_length=200)),
                ("order", models.IntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="PolicySection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="Unique ID, e.g. 'what-we-collect'", unique=True
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        blank=True,
                        help_text="Bootstrap icon class, e.g. 'bi bi-card-list'",
                        max_length=50,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("content", models.TextField()),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0, help_text="Order of appearance"
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=60, unique=True)),
                (
                    "badge_class",
                    models.CharField(
                        default="badge-analyst",
                        help_text="CSS class to color the role badge (e.g. badge-analyst, badge-designer).",
                        max_length=40,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="TermsSection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="Unique ID for section, e.g. 'agreement'", unique=True
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        blank=True,
                        help_text="Bootstrap icon class, e.g. 'bi bi-patch-check-fill'",
                        max_length=50,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("content", models.TextField()),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0, help_text="Order of appearance"
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="TitleSection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("section_name", models.CharField(default="", max_length=120)),
                ("heading", models.CharField(default="", max_length=120)),
                ("subtitle", models.CharField(blank=True, default="", max_length=200)),
                (
                    "color_class",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Bootstrap color class (e.g. text-primary, text-success).",
                        max_length=50,
                    ),
                ),
                (
                    "icon_class",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Bootstrap icon class (e.g. bi bi-people).",
                        max_length=50,
                    ),
                ),
                ("is_enabled", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Title â€” Section",
                "verbose_name_plural": "Title  Sections",
            },
        ),
        migrations.CreateModel(
            name="FooterSection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("order", models.PositiveIntegerField(default=0)),
                (
                    "footer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sections",
                        to="app.footer",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FooterLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("url", models.CharField(default="", max_length=255)),
                ("order", models.PositiveIntegerField(default=0)),
                (
                    "section",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="links",
                        to="app.footersection",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ContactInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Heading (e.g. Our Address, Call Us)", max_length=100
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Details like address, phone number, email etc."
                    ),
                ),
                (
                    "icon_class",
                    models.CharField(
                        choices=[
                            ("bi bi-geo-alt", "Address"),
                            ("bi bi-telephone", "Phone"),
                            ("bi bi-envelope", "Email"),
                            ("bi bi-clock", "Timing"),
                        ],
                        default="bi bi-geo-alt",
                        help_text="Bootstrap icon class",
                        max_length=50,
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(default=0, help_text="Sorting order"),
                ),
                (
                    "color",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="app.iconcolor",
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "slug",
                    models.SlugField(
                        help_text="Used for URLs like /category-battery", unique=True
                    ),
                ),
                ("order", models.PositiveIntegerField(default=0)),
                (
                    "color",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="app.iconcolor",
                    ),
                ),
            ],
            options={
                "ordering": ["order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Brand",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("mix_brand", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "slug",
                    models.SlugField(
                        help_text="Used for URLs like /brand-vivo", unique=True
                    ),
                ),
                ("order", models.PositiveIntegerField(default=0)),
                (
                    "color",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="app.iconcolor",
                    ),
                ),
            ],
            options={
                "ordering": ["order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Newsletter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("enabled", models.BooleanField(default=True)),
                ("button_text", models.CharField(default="Subscribe", max_length=50)),
                (
                    "disclaimer",
                    models.CharField(
                        default="By subscribing, you agree to our Privacy Policy.",
                        max_length=255,
                    ),
                ),
                (
                    "footer",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="newsletter",
                        to="app.footer",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ServiceItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField(max_length=400)),
                (
                    "icon_text",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text='Single letter like "U" or short text. Leave blank if using icon_class.',
                        max_length=12,
                    ),
                ),
                (
                    "icon_class",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Bootstrap Icons class (e.g. bi-gem). Ignored if icon_text is provided.",
                        max_length=40,
                    ),
                ),
                ("order", models.PositiveSmallIntegerField(default=1)),
                ("is_enabled", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "color",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="app.iconcolor",
                    ),
                ),
            ],
            options={
                "verbose_name": "Service Item",
                "verbose_name_plural": "Service Items",
                "ordering": ("order", "id"),
            },
        ),
        migrations.CreateModel(
            name="SocialLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("platform", models.CharField(max_length=50)),
                (
                    "icon_class",
                    models.CharField(
                        help_text="Bootstrap Icon class, e.g., bi bi-facebook",
                        max_length=50,
                    ),
                ),
                ("url", models.CharField(default="", max_length=255)),
                ("order", models.PositiveIntegerField(default=0)),
                (
                    "footer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="social_links",
                        to="app.footer",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TeamMember",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("full_name", models.CharField(max_length=100)),
                (
                    "title",
                    models.CharField(
                        help_text="Job title shown under the name.", max_length=120
                    ),
                ),
                ("photo", models.ImageField(blank=True, null=True, upload_to="team/")),
                ("bio", models.TextField(blank=True, max_length=400)),
                ("order", models.PositiveSmallIntegerField(default=1)),
                ("is_enabled", models.BooleanField(default=True)),
                ("phone_url", models.CharField(blank=True, max_length=100)),
                ("whatsapp_url", models.CharField(blank=True, max_length=100)),
                ("website_url", models.CharField(blank=True, max_length=100)),
                ("email_url", models.CharField(blank=True, max_length=100)),
                ("github_url", models.CharField(blank=True, max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "role",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="members",
                        to="app.role",
                    ),
                ),
            ],
            options={
                "verbose_name": "Team Member",
                "verbose_name_plural": "Team Members",
                "ordering": ("order", "id"),
            },
        ),
        migrations.CreateModel(
            name="UniversalCombo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "main_model",
                    models.CharField(
                        help_text="The main model name of the combo (e.g., Samsung Galaxy M12)",
                        max_length=150,
                    ),
                ),
                (
                    "compatible_models",
                    models.TextField(
                        help_text="List compatible models separated by commas or new lines"
                    ),
                ),
                ("slug", models.SlugField(blank=True, unique=True)),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Optional short description or notes"
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("active", models.BooleanField(default=True)),
                (
                    "brand",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="universal_combos",
                        to="app.brand",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="universal_combos",
                        to="app.category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Universal Combo",
                "verbose_name_plural": "Universal Combos",
                "ordering": ["brand", "category", "main_model"],
            },
        ),
        migrations.CreateModel(
            name="WhyChooseItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField(max_length=400)),
                (
                    "icon_class",
                    models.CharField(
                        default="bi-gem",
                        help_text="Bootstrap Icon class, e.g. bi-gem",
                        max_length=40,
                    ),
                ),
                ("order", models.PositiveSmallIntegerField(default=1)),
                ("is_enabled", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "color",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="app.iconcolor",
                    ),
                ),
            ],
            options={
                "verbose_name": "Why Choose Item",
                "verbose_name_plural": "Why Choose Items",
                "ordering": ("order", "id"),
            },
        ),
    ]
